name: Deploy Production CGK

on:
  workflow_dispatch:
  push:
    branches: [ master, add/gh-action-prod ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Check Node.js Version
        run: node --version

  version-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      publish_docs: ${{ steps.check_commits.outputs.publish_docs }}
      append_notes: ${{ steps.check_commits.outputs.append_notes }}
      commit_details: ${{ steps.check_commits.outputs.commit_details }}
    steps:          
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Determine if rerun
        id: check_rerun
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "This is a rerun"
            echo "::set-output name=rerun::true"
          else
            echo "This is a fresh run"
            echo "::set-output name=rerun::false"
          fi

      - name: Create Version Tagging
        if: steps.check_rerun.outputs.rerun == 'false'
        id: version
        uses: Agrim-V/qoala-tools/version-tagging@main
        with:
          prefix: "v"
          major-identifier: "break:"
          minor-identifier: "feat:"

  create-confluence-page:
    runs-on: ubuntu-latest
    needs: version-tag
    if: needs.version-tag.outputs.publish_docs == 'true'
    steps:
      - name: Create Confluence Page
        uses: Agrim-V/qoala-tools/confluence-page@main
        with:
          jira_issue_key: ${{ env.jira_issue_key }}
          release_notes: ${{ needs.version-tag.outputs.commit_details }}
          release_url: "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/tag/${{ needs.version-tag.outputs.version }}"
